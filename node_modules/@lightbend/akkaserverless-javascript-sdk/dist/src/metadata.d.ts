/// <reference types="node" />
/**
 * A metadata value. Can either be a string or a buffer.
 *
 * @typedef module:akkaserverless.MetadataValue
 * @type {string|Buffer}
 */
declare type MetadataValue = string | Buffer;
interface MetadataEntry {
    readonly key: string;
    readonly bytesValue: Buffer | undefined;
    readonly stringValue: string | undefined;
}
/**
 * @classdesc Akka Serverless metadata.
 *
 * Metadata is treated as case insensitive on lookup, and case sensitive on set. Multiple values per key are supported,
 * setting a value will add it to the current values for that key. You should delete first if you wish to replace a
 * value.
 *
 * Values can either be strings or byte buffers. If a non string or byte buffer value is set, it will be converted to
 * a string using toString.
 *
 * @interface module:akkaserverless.Metadata
 * @param {array} entries The list of entries
 */
export declare class Metadata {
    readonly entries: MetadataEntry[];
    constructor(entries?: MetadataEntry[]);
    getSubject(): MetadataValue | undefined;
    getMetadataEntry(key: string, value: any): MetadataEntry;
    getValue(entry: MetadataEntry): string | Buffer | undefined;
    /**
     * Get all the values for the given key.
     *
     * The key is case insensitive.
     *
     * @function module:akkaserverless.Metadata#get
     * @param {string} key The key to get.
     * @returns {Array<module:akkaserverless.MetadataValue>} All the values, or an empty array if no values exist for the key.
     */
    get(key: string): MetadataValue[];
    /**
     * Set a given key value.
     *
     * This will append the key value to the metadata, it won't replace any existing values for existing keys.
     *
     * @function module:akkaserverless.Metadata#set
     * @param {string} key The key to set.
     * @param {any} value The value to set.
     */
    set(key: string, value: any): this;
    /**
     * Delete all values with the given key.
     *
     * The key is case insensitive.
     *
     * @function module:akkaserverless.Metadata#delete
     * @param {string} key The key to delete.
     */
    delete(key: string): this;
    /**
     * Whether there exists a metadata value for the given key.
     *
     * The key is case insensitive.
     *
     * @function module:akkaserverless.Metadata#has
     * @param {string} key The key to check.
     */
    has(key: string): boolean;
    /**
     * Clear the metadata.
     *
     * @function module:akkaserverless.Metadata#clear
     */
    clear(): this;
}
export {};
